/*
 * Coordinate interface
 */
package distancemodel.coordinates;

/**
 *
 * @author Jeremy Reffin V1.0 20110419
 */
public interface CoordI {

    /************************Accessors******************************/
    /** return coords */
    public double[] getCoords();

    /** return coord[i] */
    public double getCoord(int i);

    /** return dimensions */
    public int getDimensions();

    /************************Mutators*******************************/
    /**set new coordinates. Input must match dimensions */
    public void set(double[] c);

    /**scalar add. Input added to each dimension */
    public void add(double f);

    /**element-wise add. Input must match dimensions of coordinate */
    public void add(double[] c);

    /**Coord add. Dimensions must agree */
    public void add(CoordI other);

    /**element-wise subtract. Input must match dimensions of coordinate */
    public void subtract(double[] c);

    /**Coord subtract. Dimensions must agree */
    public void subtract(CoordI other);

    /**Scalar multiply */
    public void mult(double f);

    /**element-wise multiply. Input must match dimensions of coordinate */
    public void mult(double[] c);

    /**Coord multiply. Dimensions must agree */
    public void mult(CoordI other);

    /**Scalar multiply and return result as new coordinate. Don't change orig */
    public CoordI getMult(double f);

    /** returns cosine of angle between point and x axis */
    public double getCosTheta2D();

    /** returns sine of angle between point and x axis */
    public double getSinTheta2D();

    /** counter-clockwise rotation by angle theta */
    public void rotate2D(double sinTheta, double cosTheta);
    
}
